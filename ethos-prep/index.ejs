/// <reference path="index.d.ts" />
const sources = <%- JSON.stringify(sources) %>;
const domains = <%- JSON.stringify(domains).replace(/"getVersions:(.*?):(.*?)"/g, "async () => (await import(/* webpackChunkName: 'ethos.$1' */ './$1.js'))['$2']") %>;
const resources = {}

function crawl(list, parent) {
    for (const entry of list) {
        if (parent)
            entry.parent = parent
        if (entry.resource) {
            resources[entry.resource] = entry
            const load = entry.getVersions
            entry.getVersions = async () => entry.versions = await load()
            entry.contains = version =>
                entry.versions
                    ? Object.values(entry.versions).some(v => v === version)
                    : false
        } else {
            if (entry.subdomains)
                crawl(entry.subdomains, entry)
            if (entry.resources)
                crawl(entry.resources, entry)
            entry.contains = item => {
                if (entry.subdomains)
                    if (entry.subdomains.some(d => d.contains(item)))
                        return true
                if (entry.resources)
                    if (item.resource)
                        return entry.resources.includes(item)
                    else
                        return entry.resources.some(r => r.contains(item))
                return false
            }
        }
    }
}
// @ts-ignore
crawl(domains)

exports.EthosData = { sources, domains, resources }